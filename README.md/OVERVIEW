# Materials Science ML Dashboard 🔬📊  

An interactive dashboard for **visualizing, analyzing, and predicting material properties** using **Machine Learning & Data Science**. 
Built with **React, TypeScript, and TensorFlow.js** for real-time model insights.

![Dashboard Preview](https://drive.google.com/file/d/1uPCLiY4oYpUaOahHdAZczTK0Zc3_od4M/view?usp=drivesdk)

## Features

- 📊 Interactive data visualization with Chart.js
- 🧮 Real-time model performance metrics
- 📈 Material properties analysis
- 💻 Modern, responsive design
- 🔍 Detailed statistical analysis

## Tech Stack

- React 18
- TypeScript
- TensorFlow.js
- Chart.js
- Tailwind CSS
- Vite

## Getting Started

1. Clone the repository:
   ```bash
   git clone https://github.com/yourusername/materials-ml-dashboard.git
   ```

2. Install dependencies:
   ```bash
   cd materials-ml-dashboard
   npm install
   ```

3. Start the development server:
   ```bash
   npm run dev
   ```

4. Open [http://localhost:5173](http://localhost:5173) in your browser

## Project Structure

```
materials-ml-dashboard/
├── src/
│   ├── components/
│   │   ├── MaterialProperties.tsx
│   │   └── ModelPerformance.tsx
│   ├── data.ts
│   ├── types.ts
│   ├── App.tsx
│   └── main.tsx
├── public/
├── package.json
└── README.md
```

## Data Structure

The dashboard visualizes material properties including:
- Formation Energy (eV)
- Unit Cell Volume
- Band Gap (eV)
- Magnetization (μB)
- Model performance metrics (RMSE, MAE)

## Contributing

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/AmazingFeature`)
3. Commit your changes (`git commit -m 'Add some AmazingFeature'`)
4. Push to the branch (`git push origin feature/AmazingFeature`)
5. Open a Pull Request

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.


# Materials-Property-Prediction-using-Machine-Learning
This project applies Machine Learning (ML) and Deep Learning techniques to predict 
key material properties such as yield strength, fatigue life, and ductility based 
on compositional and processing parameters. It utilizes datasets from 
Materials Project, OQMD, and Citrine and employs models like Random Forest, XGBoost, 
and Neural Networks (GNNs/CNNs) for accurate predictions.
